version: '3.8'

services:
  web:
    build: .
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    # Development (with volume)
    volumes:
      - .:/app
      - /app/.venv # Exclude .venv from bind mount
    env_file:
      - .env
    networks:
      - service_networks

  db:
    image: postgres:17
    container_name: postgres-master
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ../.db_data/postgresdata:/var/lib/postgresql/data
      - ./master-db-config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./master-db-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    env_file:
      - .env
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-social_network}"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - service_networks

  db-slave1:
    image: postgres:17
    container_name: postgres_slave1
    ports:
      - "5433:5432"
    volumes:
      - ../.db_data/slave1data:/var/lib/postgresql/data
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - service_networks

  db-slave2:
    image: postgres:17
    container_name: postgres_slave2
    ports:
      - "5434:5432"
    volumes:
      - ../.db_data/slave2data:/var/lib/postgresql/data
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - service_networks

networks:
  service_networks:
    name: service_networks
    driver: bridge
